{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\framework\\manager/assets\\script\\framework\\manager\\ResLoadManager.js"],"names":["PrefabManager","require","SpineManager","SpriteManager","AnimManager","TrackManager","ConfigManager","Global","ResLoadManager","bInited","reqItemIndex","completedCount","totalCount","lastPercent","itemArray","bReqRoom","bLoadFinish","loadingLayer","ctrl","nextScene","Type","cc","Enum","Prefab","Anim","Spine","Sprite","Fish","Welcome","MainBg","Status","JoinRoomSuccess","reset","init","loadSceneRes","sceneInfo","config","name","log","error","info","director","_getSceneUuid","layer","isMainScene","createItem","total","game","EventManager","on","MsgMarco","loadingProgress","_eventLoadingProgress","self","index","loader","load","uuid","type","item","showLoading","err","asset","macro","DOWNLOAD_MAX_CONCURRENT","preloadResource","completed","warn","length","len","obj","subCompleted","subTotal","requestMainScene","setTimeout","enterScene","progress","misc","clamp01","percent","Math","floor","updatePercent","connectRoomServer","event","status","data","off","_createObj","push","getPreloadsByScene","dirs","items","str","dir","value","path","indexOf","hasOwnProperty","isPreload","getAllPreloads","preload","i","bShowLoading","allItems","delay","preloadDir","_progressCallback","_completeCallback","_loadFishDir","loadDir","_loadWelcome","_loadMainBg","progressCallback","completeCallback","animNames","getRoomFishesByType","complete","_localCallback","subDir","bSpine","getConfig","conf","bgName","cache","module","exports"],"mappings":"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","file":"ResLoadManager.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\framework\\manager","sourcesContent":["const PrefabManager = require('PrefabManager');\r\nconst SpineManager = require('SpineManager');\r\nconst SpriteManager = require('SpriteManager');\r\nconst AnimManager = require('AnimManager');\r\nconst TrackManager = require('TrackManager');\r\nconst ConfigManager = require('ConfigManager');\r\nconst Global = require('Global');\r\n\r\nlet ResLoadManager = {\r\n    bInited: false,\r\n    reqItemIndex: 0,\r\n    completedCount: 0,\r\n    totalCount: 0,\r\n    lastPercent: 0,\r\n    itemArray: [],\r\n    bReqRoom: false,\r\n    bLoadFinish: false,\r\n    loadingLayer: null,\r\n    ctrl: null,\r\n    nextScene: null,\r\n    \r\n    // 需要加载的资源类型\r\n    Type: cc.Enum({\r\n        Prefab: 1, // 普通Prefab\r\n        Anim: 2, // 普通序列帧动画\r\n        Spine: 3, // 普通Spine动画\r\n        Sprite: 4, // 普通Sprite图片\r\n        Fish: 5, // 鱼资源(特殊处理，包括序列帧和Spine动画)\r\n        Welcome: 6, // 进入渔场的欢迎动画(特殊处理，根据登录次数决定是否加载)\r\n        MainBg: 7, // 渔场背景(特殊处理，根据房间类型决定加载哪张图片)\r\n    }),\r\n\r\n    // 加载进度的状态\r\n    Status: cc.Enum({\r\n        JoinRoomSuccess: 1, // 服务器回复成功进入房间\r\n    }),\r\n\r\n    \r\n    reset: function() {\r\n        this.completedCount = 0;\r\n        this.totalCount = 0;\r\n        this.reqItemIndex = 0;\r\n        this.lastPercent = 0;\r\n        this.itemArray = [];\r\n        this.bReqRoom = false;\r\n        this.bLoadFinish = false;\r\n        this.loadingLayer = null;\r\n        this.ctrl = null;\r\n        this.nextScene = null;\r\n    },\r\n\r\n    init: function(ctrl) {\r\n        this.reset();\r\n        this.ctrl = ctrl;\r\n    },\r\n\r\n    // 加载指定场景的资源\r\n    loadSceneRes: function(sceneInfo, config) {\r\n        if (!this.ctrl || !sceneInfo || !sceneInfo.name) {\r\n            log.error('ResLoader.loadSceneRes: error param.');\r\n            return;\r\n        }\r\n\r\n        let info = cc.director._getSceneUuid(sceneInfo.name);\r\n        if (!info) {\r\n            log.error('ResLoader.loadSceneRes: cannot find scene: {}', sceneInfo.name);\r\n            return;\r\n        }\r\n\r\n        this.nextScene = sceneInfo;\r\n        if (!!config && !!config.layer) {\r\n            this.loadingLayer = config.layer;\r\n        }\r\n\r\n        // 如果将要进入的是主渔场，创建一个请求进入房间的进度项\r\n        if (this.ctrl.isMainScene(sceneInfo.name)) {\r\n            this.reqItemIndex = this.createItem({ total: 1});\r\n            game.EventManager.on(Global.MsgMarco.loadingProgress, this._eventLoadingProgress, this);\r\n        }\r\n        \r\n        // 加载场景自身资源\r\n        let self = this;\r\n        let index = this.createItem();\r\n        cc.loader.load({uuid:info.uuid, type:'uuid'}, (completedCount, totalCount, item) => {\r\n            self.showLoading(index, completedCount, totalCount, item);\r\n        }, (err, asset) => {\r\n            if (err) {\r\n                log.error('ResLoader.loadSceneRes: error to load uuid');\r\n                return;\r\n            }\r\n        });\r\n\r\n        // 加载该场景需要预加载的资源\r\n        cc.macro.DOWNLOAD_MAX_CONCURRENT = 8;\r\n        this.preloadResource(sceneInfo, true);\r\n    },\r\n\r\n    // 显示进度\r\n    showLoading: function(index, completed, total, item) {\r\n        if (!this.loadingLayer || !this.ctrl) {\r\n            log.warn('ResLoader.showLoading: invalid param(layer or ctrl is null)');\r\n            return;\r\n        }\r\n        if (completed === 0 && total === 0) {\r\n            log.warn('ResLoader.showLoading: invalid param(comp and total is 0)');\r\n            return;\r\n        }\r\n        if (index < 0 || index >= this.itemArray.length) {\r\n            log.warn('ResLoader.showLoading: param is invalid. index={}, len={}', index, len);\r\n            return;\r\n        }\r\n\r\n        let obj = this.itemArray[index];\r\n        // 总数量每次只增加差值，避免反复计算\r\n        let subCompleted = completed - obj.completed;\r\n        let subTotal = total - obj.total;\r\n        this.completedCount += subCompleted;\r\n        this.totalCount += subTotal;\r\n        // 存储新值\r\n        obj.completed = completed;\r\n        obj.total = total;\r\n        \r\n        // 如果新增完成数小于等于0，说明完成进度没有更新，可直接返回\r\n        if (subCompleted <= 0) {\r\n            return;\r\n        }\r\n\r\n        let completedCount = this.completedCount;\r\n        let totalCount = this.totalCount;\r\n        if ((completedCount+1) === totalCount && !this.bReqRoom) {\r\n            this.bReqRoom = true;\r\n            if (this.ctrl.isMainScene(this.nextScene.name)) {\r\n                this.requestMainScene();\r\n            }\r\n        } else if (completedCount === totalCount && !this.bLoadFinish) {\r\n            this.bLoadFinish = true;\r\n            setTimeout(() => {\r\n                !!this.ctrl && this.ctrl.enterScene(this.nextScene);\r\n            }, 0);\r\n        }\r\n\r\n        let progress = cc.misc.clamp01(completedCount / totalCount);\r\n        let percent = Math.floor(progress * 100);\r\n        // 只有大于当前进度才更新，保证进度的UI显示不会回退\r\n        if (percent > this.lastPercent) {\r\n            log.info('loading: per={}, complete={}, total={}', percent, completedCount, totalCount);\r\n            if (this.loadingLayer) {\r\n                this.loadingLayer.updatePercent(progress, percent);\r\n            }\r\n            this.lastPercent = percent;\r\n        }\r\n    },\r\n\r\n    // 向服务器发送请求进入主渔场\r\n    requestMainScene: function() {\r\n        require('NetHelper').connectRoomServer(1);\r\n    },\r\n\r\n    // loading进度条过程的事件处理\r\n    _eventLoadingProgress: function(event) {\r\n        let status = event.data.status;\r\n        log.info('eventLoadingProgress: is called({})', status);\r\n        switch(status) {\r\n            case this.Status.JoinRoomSuccess:\r\n                if (this.ctrl && this.ctrl.isMainScene(this.nextScene.name)) {\r\n                    this.showLoading(this.reqItemIndex, 1, 1, null);\r\n                    game.EventManager.off(Global.MsgMarco.loadingProgress, this._eventLoadingProgress, this);\r\n                }\r\n                break;\r\n        }\r\n    },\r\n\r\n    // 创建一个进度统计对象，返回该对象在数组中的索引\r\n    createItem: function(data) {\r\n        let _createObj = function(completedCount, totalCount) {\r\n            let obj = {completed:completedCount, total:totalCount};\r\n            return obj;\r\n        };\r\n        let total = 0;\r\n        if (!!data && !!data.total) {\r\n            total = data.total;\r\n        }\r\n        this.totalCount += total;\r\n        let len = this.itemArray.push(_createObj(0, total));\r\n        // log.info('ResLoader.createItem: len={}, total={}', len, total);\r\n        return (len-1);\r\n    },\r\n\r\n    // 获取指定场景已定义好的预加载项\r\n    getPreloadsByScene: function(type, dirs, name, items) {\r\n        let str = '/' + name + '/';\r\n        for (let dir in dirs) {\r\n            let value = dirs[dir];\r\n            if (value.path.indexOf(str) >= 0 && value.hasOwnProperty('isPreload') && value.isPreload === true) {\r\n                let item = {type:type, dir:dir};\r\n                items.push(item);\r\n            }\r\n        }\r\n    },\r\n\r\n    // 返回目标场景所有需要预加载的资源\r\n    getAllPreloads: function(sceneInfo) {\r\n        let items = [];\r\n        // 获取所有定义好的预加载资源\r\n        this.getPreloadsByScene(this.Type.Prefab, PrefabManager.dirs, sceneInfo.name, items);\r\n        this.getPreloadsByScene(this.Type.Anim, AnimManager.dirs, sceneInfo.name, items);\r\n        this.getPreloadsByScene(this.Type.Spine, SpineManager.dirs, sceneInfo.name, items);\r\n        this.getPreloadsByScene(this.Type.Sprite, SpriteManager.dirs, sceneInfo.name, items);\r\n        // 获取需特别处理的预加载资源\r\n        if (!!sceneInfo.preload) {\r\n            for (let i = 0, len = sceneInfo.preload.length; i < len; i++) {\r\n                items.push(sceneInfo.preload[i]);\r\n            }\r\n        }\r\n        return items;\r\n    },\r\n\r\n    // bShowLoading - 是否显示进度条(一般是需要，但Postload目录不需要)\r\n    preloadResource: function(sceneInfo, bShowLoading) {\r\n        let allItems = this.getAllPreloads(sceneInfo);\r\n        for (let i = 0, len = allItems.length; i < len; i++) {\r\n            let item = allItems[i];\r\n            if (item.hasOwnProperty('delay') && item.delay > 0) {\r\n                setTimeout(() => {\r\n                    this.preloadDir(item, bShowLoading);\r\n                }, item.delay);\r\n            } else {\r\n                this.preloadDir(item, bShowLoading);\r\n            }\r\n        }\r\n    },\r\n\r\n    preloadDir: function(item, bShowLoading) {\r\n        let _progressCallback = null;\r\n        let _completeCallback = null;\r\n        \r\n        if (bShowLoading) {\r\n            let self = this;\r\n            let index = this.createItem();\r\n            _progressCallback = function(completedCount, totalCount, item) {\r\n                self.showLoading(index, completedCount, totalCount, item);\r\n            };\r\n        }\r\n\r\n        switch(item.type) {\r\n            case this.Type.Fish:\r\n                this._loadFishDir(item.dir, _progressCallback, _completeCallback);\r\n                break;\r\n            case this.Type.Prefab:\r\n                PrefabManager.loadDir(item.dir, _progressCallback, _completeCallback);\r\n                break;\r\n            case this.Type.Anim:\r\n                AnimManager.loadDir(item.dir, _progressCallback, _completeCallback);\r\n                break;\r\n            case this.Type.Spine:\r\n                SpineManager.loadDir(item.dir, _progressCallback, _completeCallback);\r\n                break;\r\n            case this.Type.Welcome:\r\n                this._loadWelcome(item.dir, _progressCallback, _completeCallback);\r\n                break;\r\n            case this.Type.MainBg:\r\n                this._loadMainBg(item.dir, _progressCallback, _completeCallback);\r\n                break;\r\n        }\r\n    },\r\n\r\n    // 加载指定渔场的精灵资源\r\n    _loadFishDir: function(dir, progressCallback, completeCallback) {\r\n        let animNames = TrackManager.getRoomFishesByType(1);\r\n        let len = animNames.length;\r\n        let complete = 0;\r\n        // 先把应加载的资源数量发送给UI\r\n        !!progressCallback && progressCallback(complete, len, null);\r\n\r\n        let _localCallback = function() {\r\n            complete += 1;\r\n            !!progressCallback && progressCallback(complete, len, null);\r\n        };\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let obj = animNames[i];\r\n            let config = { subDir: obj.name };\r\n            if (obj.bSpine) {\r\n                SpineManager.loadDir(dir, null, _localCallback, config);\r\n            } else {\r\n                AnimManager.loadDir(dir, null, _localCallback, config);\r\n            }\r\n        }\r\n    },\r\n\r\n    // 加载渔场的入场欢迎动画\r\n    _loadWelcome: function(dir, progressCallback, completeCallback) {\r\n        SpineManager.loadDir(dir, progressCallback, completeCallback);\r\n    },\r\n\r\n    // 加载渔场背景\r\n    _loadMainBg: function(dir, progressCallback, completeCallback) {\r\n        let self = this;\r\n        ConfigManager.getConfig('RoomRules', (conf) => {\r\n            let bgName = conf[1].bgName;\r\n            if (bgName) {\r\n                SpriteManager.load(dir, bgName, null, {cache:true});\r\n            }\r\n        });\r\n    },\r\n}\r\n\r\nmodule.exports = ResLoadManager;\r\n"]}