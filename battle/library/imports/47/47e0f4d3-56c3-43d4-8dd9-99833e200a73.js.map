{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\framework\\utils/assets\\script\\framework\\utils\\ConfigManager.js"],"names":["ConfigManager","dataMap","init","callback","self","cc","loader","loadRes","err","object","log","error","message","key","json","getConfig","file","config","getFishConfById","fishId","fishTable","getItemConfById","id","j","Item","length","itemid","parseInt","module","exports"],"mappings":";;;;;;AAAA,IAAIA,gBAAgB;AAChBC,aAAS,EADO;;AAGhBC,UAAM,cAASC,QAAT,EAAmB;AACrB,YAAIC,OAAO,IAAX;AACAC,WAAGC,MAAH,CAAUC,OAAV,CAAkB,cAAlB,EAAkC,UAASC,GAAT,EAAcC,MAAd,EAAsB;AACpD,gBAAID,GAAJ,EAAS;AACLE,oBAAIC,KAAJ,CAAU,0BAA0BH,GAA1B,IAAiCA,IAAII,OAA/C;AACH,aAFD,MAEO;AACH,qBAAK,IAAIC,GAAT,IAAgBJ,OAAOK,IAAvB,EAA6B;AACzBV,yBAAKH,OAAL,CAAaY,GAAb,IAAoBJ,OAAOK,IAAP,CAAYD,GAAZ,CAApB;AACH;AACJ;AACD,gBAAI,CAAC,CAACV,QAAN,EAAgB;AACZA,yBAASK,GAAT;AACH;AACJ,SAXD;AAYH,KAjBe;;AAmBhB;;;;;AAKAO,eAAW,mBAASC,IAAT,EAAeb,QAAf,EAAyB;AAChC,YAAIC,OAAO,IAAX;AACA,YAAIa,SAASb,KAAKH,OAAL,CAAae,IAAb,CAAb;AACA,YAAIC,MAAJ,EAAY;AACR,aAAC,CAACd,QAAF,IAAcA,SAASc,MAAT,CAAd;AACA,mBAAOA,MAAP;AACH;;AAED;AACAZ,WAAGC,MAAH,CAAUC,OAAV,CAAkB,cAAcS,IAAhC,EAAsC,UAACR,GAAD,EAAMC,MAAN,EAAiB;AACnD,gBAAID,GAAJ,EAAS;AACLE,oBAAIC,KAAJ,CAAU,mCAAkCK,IAAlC,GAAwC,QAAxC,GAAkDR,GAAlD,IAAuDA,IAAII,OAArE;AACA;AACH;AACDR,iBAAKH,OAAL,CAAae,IAAb,IAAqBP,OAAOK,IAA5B;AACA,aAAC,CAACX,QAAF,IAAcA,SAASC,KAAKH,OAAL,CAAae,IAAb,CAAT,CAAd;AACH,SAPD;AAQH,KAzCe;;AA2ChB;AACAE,qBAAiB,yBAASC,MAAT,EAAiB;AAC9B,YAAIC,YAAY,KAAKL,SAAL,CAAe,eAAf,CAAhB;AACA,eAAOK,UAAUD,SAAO,CAAjB,CAAP;AACH,KA/Ce;;AAiDhB;AACAE,qBAAiB,yBAASC,EAAT,EAAa;AAC1B,aAAK,IAAIC,IAAI,CAAb,EAAiBA,IAAI,KAAKtB,OAAL,CAAauB,IAAb,CAAkBC,MAAvC,EAAgDF,GAAhD,EAAqD;AACjD,gBAAI,KAAKtB,OAAL,CAAauB,IAAb,CAAkBD,CAAlB,EAAqBG,MAArB,KAAgCC,SAASL,EAAT,CAApC,EAAkD;AAC9C,uBAAO,KAAKrB,OAAL,CAAauB,IAAb,CAAkBD,CAAlB,CAAP;AACH;AACJ;AACD,eAAO,IAAP;AACH;;AAzDe,CAApB;;AA6DAK,OAAOC,OAAP,GAAiB7B,aAAjB","file":"ConfigManager.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\framework\\utils","sourcesContent":["let ConfigManager = {\r\n    dataMap: {},\r\n\r\n    init: function(callback) {\r\n        let self = this;\r\n        cc.loader.loadRes('conf/allConf', function(err, object) {\r\n            if (err) {\r\n                log.error('error to read Config:' + err || err.message);\r\n            } else {\r\n                for (let key in object.json) {\r\n                    self.dataMap[key] = object.json[key];\r\n                }\r\n            }\r\n            if (!!callback) {\r\n                callback(err);\r\n            }\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * \r\n     * @param {*配置文件名} file \r\n     * @param {*异步加载完成回调} callback \r\n     */\r\n    getConfig: function(file, callback) {\r\n        let self = this;\r\n        let config = self.dataMap[file];\r\n        if (config) {\r\n            !!callback && callback(config);\r\n            return config;\r\n        }\r\n\r\n        // 缓存未找到，执行异步加载\r\n        cc.loader.loadRes('conf/Conf' + file, (err, object) => {\r\n            if (err) {\r\n                log.error('ConfigManager.getConfig: file=' +file +', err:' +err||err.message);\r\n                return;\r\n            }\r\n            self.dataMap[file] = object.json;\r\n            !!callback && callback(self.dataMap[file]);\r\n        });\r\n    },\r\n\r\n    // 根据鱼Id返回鱼属性表中相应的行\r\n    getFishConfById: function(fishId) {\r\n        let fishTable = this.getConfig('FishAttribute');\r\n        return fishTable[fishId-1];\r\n    },\r\n\r\n    //根据id获得道具配置\r\n    getItemConfById: function(id) {\r\n        for (let j = 0 ; j < this.dataMap.Item.length ; j++) {\r\n            if (this.dataMap.Item[j].itemid === parseInt(id)) {\r\n                return this.dataMap.Item[j];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = ConfigManager;"]}