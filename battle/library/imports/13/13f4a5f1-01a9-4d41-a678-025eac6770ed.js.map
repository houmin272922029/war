{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\framework\\manager/assets\\script\\framework\\manager\\UIManager.js"],"names":["SpriteManager","require","PrefabManager","UIManager","uimap","uuidMap","reset","uuid","ui","cc","isValid","destroy","createUI","prefab","url","key","data","instantiate","isOpen","getUIInstance","isClose","undefined","removeUI","showUI","prefabURL","load","dir","name","fullPath","arr","baseUINode","inHiding","script","getComponent","setClickOtherClose","clickOtherClose","onShow","closeUI","onClose","isPanelOpen","item","_dynamicResAutoRelease","_cacheTextures","i","children","node","sprite","Sprite","spriteFrame","_cacheTexture","_simplifyPath","_textureFilename","button","Button","normalSprite","pressedSprite","hoverSprite","disabledSprite","label","Label","font","BitmapFont","richText","RichText","imageAtlas","keys","Object","_spriteFrames","length","particleSystem","ParticleSystem","_texture","pageViewIndicator","PageViewIndicator","editBox","EditBox","backgroundImage","mask","Mask","module","exports"],"mappings":"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","file":"UIManager.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\framework\\manager","sourcesContent":["const SpriteManager = require('SpriteManager');\r\nconst PrefabManager = require('PrefabManager');\r\n\r\nlet UIManager = {\r\n    uimap: {},\r\n    uuidMap: {},\r\n\r\n    reset() {\r\n        for (let uuid in this.uimap) {\r\n            let ui = this.uimap[uuid].ui;\r\n            if (ui && cc.isValid(ui)) ui.destroy();\r\n        }\r\n        this.uimap = {};\r\n    },\r\n\r\n    createUI: function (prefab, url) {\r\n        let key = prefab.data.uuid;\r\n        if (!!this.uimap[key]) {\r\n            // 已有实例则不生成新ui\r\n            return [0, this.uimap[key].ui];\r\n        }\r\n        let ui = cc.instantiate(prefab);\r\n        // this._dynamicResAutoRelease(ui);\r\n        this.uuidMap[ui.uuid] = key;\r\n        this.uimap[key] = { ui: ui, prefab: prefab, url: url, isOpen: true };\r\n        return [1, this.uimap[key].ui];\r\n    },\r\n\r\n    getUIInstance: function (uuid, isClose) {\r\n        uuid = this.uuidMap[uuid];\r\n        if (!!isClose) {\r\n            if (!!this.uimap[uuid]) {\r\n                this.uimap[uuid].isOpen = false;\r\n            }\r\n        }\r\n        return this.uimap[uuid] ? this.uimap[uuid].ui : undefined;\r\n    },\r\n\r\n    removeUI: function (uuid) {\r\n        // cc.loader.releaseAsset(this.uimap[uuid].prefab);\r\n        // cc.loader.release(this.uimap[uuid].prefab);\r\n        // let deps = cc.loader.getDependsRecursively(this.uimap[uuid].prefab);\r\n        uuid = this.uuidMap[uuid];\r\n        delete this.uuidMap[uuid];\r\n        this.uimap[uuid].ui.destroy();\r\n        delete this.uimap[uuid];\r\n    },\r\n\r\n    //打开ui\r\n    showUI: function (prefabURL, data) {\r\n        PrefabManager.load(prefabURL.dir, prefabURL.name, (prefab) => {\r\n            let url = PrefabManager.fullPath(prefabURL.dir, prefabURL.name);\r\n            let arr = this.createUI(prefab, url);\r\n            if (arr && arr[0] <= 0) {\r\n                return\r\n            }\r\n            let baseUINode = arr[1];\r\n            baseUINode.inHiding = true;\r\n            let script = baseUINode.getComponent('BaseUI');\r\n            script.setClickOtherClose(prefabURL.clickOtherClose);\r\n            script.onShow(prefab, data);\r\n        });\r\n    },\r\n\r\n    //关闭面板\r\n    closeUI: function (prefabURL) {\r\n        let url = PrefabManager.fullPath(prefabURL.dir, prefabURL.name);\r\n        if (!!prefabURL && !!url) {\r\n            for (let key in this.uimap) {\r\n                if (url === this.uimap[key].url) {\r\n                    let baseUINode = this.uimap[key].ui;\r\n                    if (cc.isValid(baseUINode)) {\r\n                        let script = baseUINode.getComponent('BaseUI');\r\n                        script.onClose();\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    isPanelOpen: function (item) {\r\n        let url = PrefabManager.fullPath(item.dir, item.name);\r\n        if (url) {\r\n            for (let key in this.uimap) {\r\n                if (this.uimap[key].url === url) {\r\n                    return this.uimap[key].isOpen;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    // 自动管理动态资源\r\n    _dynamicResAutoRelease: function (ui) {\r\n        this._cacheTextures(ui);\r\n        for (let i in ui.children) {\r\n            this._dynamicResAutoRelease(ui.children[i]);\r\n        }\r\n    },\r\n\r\n    _cacheTextures: function (node) {\r\n        let sprite = node.getComponent(cc.Sprite);\r\n        if (sprite && sprite.spriteFrame) {\r\n            SpriteManager._cacheTexture(sprite, SpriteManager._simplifyPath(sprite.spriteFrame._textureFilename));\r\n        }\r\n\r\n        let button = node.getComponent(cc.Button);\r\n        if (button) {\r\n            if (button.normalSprite && button.normalSprite.spriteFrame) {\r\n                SpriteManager._cacheTexture(button.normalSprite, SpriteManager._simplifyPath(button.normalSprite.spriteFrame._textureFilename));\r\n            }\r\n\r\n            if (button.pressedSprite && button.pressedSprite.spriteFrame) {\r\n                SpriteManager._cacheTexture(button.pressedSprite, SpriteManager._simplifyPath(button.pressedSprite.spriteFrame._textureFilename));\r\n            }\r\n\r\n            if (button.hoverSprite && button.hoverSprite.spriteFrame) {\r\n                SpriteManager._cacheTexture(button.hoverSprite, SpriteManager._simplifyPath(button.hoverSprite.spriteFrame._textureFilename));\r\n            }\r\n\r\n            if (button.disabledSprite && button.disabledSprite.spriteFrame) {\r\n                SpriteManager._cacheTexture(button.disabledSprite, SpriteManager._simplifyPath(button.disabledSprite.spriteFrame._textureFilename));\r\n            }\r\n        }\r\n\r\n        let label = node.getComponent(cc.Label);\r\n        if (label && label.font && label.font instanceof cc.BitmapFont && label.font.spriteFrame) {\r\n            SpriteManager._cacheTexture(label.font, SpriteManager._simplifyPath(label.font.spriteFrame._textureFilename));\r\n        }\r\n\r\n        let richText = node.getComponent(cc.RichText);\r\n        if (richText && richText.imageAtlas) {\r\n            let keys = Object.keys(richText.imageAtlas._spriteFrames);\r\n            if (keys.length > 0) {\r\n                SpriteManager._cacheTexture(richText, SpriteManager._simplifyPath(richText.imageAtlas._spriteFrames[keys[0]]._textureFilename));\r\n            }\r\n        }\r\n\r\n        let particleSystem = node.getComponent(cc.ParticleSystem);\r\n        if (particleSystem && particleSystem._texture) {\r\n            SpriteManager._cacheTexture(particleSystem, SpriteManager._simplifyPath(particleSystem._texture.url));\r\n        }\r\n\r\n        let pageViewIndicator = node.getComponent(cc.PageViewIndicator);\r\n        if (pageViewIndicator && pageViewIndicator.spriteFrame) {\r\n            SpriteManager._cacheTexture(pageViewIndicator, SpriteManager._simplifyPath(pageViewIndicator.spriteFrame._textureFilename));\r\n        }\r\n\r\n        let editBox = node.getComponent(cc.EditBox);\r\n        if (editBox && editBox.backgroundImage) {\r\n            SpriteManager._cacheTexture(editBox, SpriteManager._simplifyPath(editBox.backgroundImage._textureFilename));\r\n        }\r\n\r\n        let mask = node.getComponent(cc.Mask);\r\n        if (mask && mask.spriteFrame) {\r\n            SpriteManager._cacheTexture(mask, SpriteManager._simplifyPath(mask.spriteFrame._textureFilename));\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = UIManager;"]}