{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\framework\\utils/assets\\script\\framework\\utils\\MemoryDetector.js"],"names":["MemoryDetector","_inited","showMemoryStatus","cc","sys","isNative","_memLabel","profiler","showStats","createMemLabel","document","createElement","_fps","getElementById","style","height","log","info","color","font","lineHeight","width","appendChild","afterVisit","count","totalBytes","locTexrues","textureCache","_textures","key","selTexture","getPixelWidth","getPixelHeight","locTextureColorsCache","_textureColorsCache","selCanvasColorsArr","selCanvasKey","selCanvas","innerHTML","toFixed","director","on","Director","EVENT_AFTER_VISIT","module","exports"],"mappings":";;;;;;AAAA,IAAMA,iBAAiB;AACnBC,aAAS,KADU;;AAGnBC,oBAHmB,8BAGA;AACf,YAAIC,GAAGC,GAAH,CAAOC,QAAX,EAAqB;AACjB;AACH;;AAED,YAAI,KAAKJ,OAAT,EAAkB;AACd;AACH;;AAED,YAAIK,YAAY,IAAhB;AACA,YAAIC,WAAWJ,GAAGI,QAAlB;AACAA,iBAASC,SAAT;;AAEA,YAAIC,iBAAiB,SAAjBA,cAAiB,GAAY;AAC7BH,wBAAYI,SAASC,aAAT,CAAuB,KAAvB,CAAZ;AACAJ,qBAASK,IAAT,GAAgBF,SAASG,cAAT,CAAwB,KAAxB,CAAhB;AACAN,qBAASK,IAAT,CAAcE,KAAd,CAAoBC,MAApB,GAA6B,OAA7B;;AAEAC,gBAAIC,IAAJ;AACA,gBAAIH,QAAQR,UAAUQ,KAAtB;AACAA,kBAAMI,KAAN,GAAc,kBAAd;AACAJ,kBAAMK,IAAN,GAAa,4BAAb;AACAL,kBAAMM,UAAN,GAAmB,OAAnB;AACAN,kBAAMO,KAAN,GAAc,MAAd;AACAd,qBAASK,IAAT,CAAcU,WAAd,CAA0BhB,SAA1B;AACH,SAZD;;AAcAG;;AAEA,YAAIc,aAAa,SAAbA,UAAa,GAAY;AACzB,gBAAIC,QAAQ,CAAZ;AACA,gBAAIC,aAAa,CAAjB;AACA,gBAAIC,aAAavB,GAAGwB,YAAH,CAAgBC,SAAjC;AACA,iBAAK,IAAIC,GAAT,IAAgBH,UAAhB,EAA4B;AACxB,oBAAII,aAAaJ,WAAWG,GAAX,CAAjB;AACAL;AACAC,8BAAcK,WAAWC,aAAX,KAA6BD,WAAWE,cAAX,EAA7B,GAA2D,CAAzE;AACH;;AAED,gBAAIC,wBAAwB9B,GAAGwB,YAAH,CAAgBO,mBAA5C;;AAEA,iBAAK,IAAIL,IAAT,IAAgBI,qBAAhB,EAAuC;AACnC,oBAAIE,qBAAqBF,sBAAsBJ,IAAtB,CAAzB;AACA,qBAAK,IAAIO,YAAT,IAAyBD,kBAAzB,EAA6C;AACzC,wBAAIE,YAAYF,mBAAmBC,YAAnB,CAAhB;AACAZ;AACAC,kCAAcY,UAAUhB,KAAV,GAAkBgB,UAAUtB,MAA5B,GAAqC,CAAnD;AACH;AACJ;AACDT,sBAAUgC,SAAV,GAAsB,eAAe,CAACb,cAAc,SAAS,MAAvB,CAAD,EAAiCc,OAAjC,CAAyC,CAAzC,CAAf,GAA6D,IAAnF;AACH,SArBD;;AAuBApC,WAAGqC,QAAH,CAAYC,EAAZ,CAAetC,GAAGuC,QAAH,CAAYC,iBAA3B,EAA8CpB,UAA9C;;AAEA,aAAKtB,OAAL,GAAe,IAAf;AACH;AA1DkB,CAAvB;;AA8DA2C,OAAOC,OAAP,GAAiB7C,cAAjB","file":"MemoryDetector.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\framework\\utils","sourcesContent":["const MemoryDetector = {\r\n    _inited: false,\r\n\r\n    showMemoryStatus() {\r\n        if (cc.sys.isNative) {\r\n            return;\r\n        }\r\n\r\n        if (this._inited) {\r\n            return;\r\n        }\r\n\r\n        let _memLabel = null;\r\n        let profiler = cc.profiler;\r\n        profiler.showStats();\r\n\r\n        let createMemLabel = function () {\r\n            _memLabel = document.createElement('div');\r\n            profiler._fps = document.getElementById('fps');\r\n            profiler._fps.style.height = '100px';\r\n\r\n            log.info();\r\n            let style = _memLabel.style;\r\n            style.color = 'rgb(0, 255, 255)';\r\n            style.font = 'bold 12px Helvetica, Arial';\r\n            style.lineHeight = '20px;';\r\n            style.width = '100%';\r\n            profiler._fps.appendChild(_memLabel);\r\n        }\r\n\r\n        createMemLabel();\r\n\r\n        let afterVisit = function () {\r\n            let count = 0;\r\n            let totalBytes = 0;\r\n            let locTexrues = cc.textureCache._textures;\r\n            for (let key in locTexrues) {\r\n                let selTexture = locTexrues[key];\r\n                count++;\r\n                totalBytes += selTexture.getPixelWidth() * selTexture.getPixelHeight() * 4;\r\n            }\r\n\r\n            let locTextureColorsCache = cc.textureCache._textureColorsCache;\r\n\r\n            for (let key in locTextureColorsCache) {\r\n                let selCanvasColorsArr = locTextureColorsCache[key];\r\n                for (let selCanvasKey in selCanvasColorsArr) {\r\n                    let selCanvas = selCanvasColorsArr[selCanvasKey];\r\n                    count++;\r\n                    totalBytes += selCanvas.width * selCanvas.height * 4;\r\n                }\r\n            }\r\n            _memLabel.innerHTML = \"  Memory  \" + (totalBytes / (1024.0 * 1024.0)).toFixed(2) + \" M\";\r\n        }\r\n\r\n        cc.director.on(cc.Director.EVENT_AFTER_VISIT, afterVisit);\r\n\r\n        this._inited = true;\r\n    },\r\n\r\n}\r\n\r\nmodule.exports = MemoryDetector;"]}