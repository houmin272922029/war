{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\framework\\utils/assets\\script\\framework\\utils\\OverlayShader.js"],"names":["overlay","name","defines","vert","frag","module","exports"],"mappings":";;;;;;AAAA;;AAEA,IAAIA,UAAU;AACVC,UAAM,SADI;;AAGVC,aAAS,EAHC;;AAKVC,+RALU;;AAgBVC;AAhBU,CAAd;;AAsCAC,OAAOC,OAAP,GAAiBN,OAAjB","file":"OverlayShader.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\framework\\utils","sourcesContent":["// Shader: 纹理与颜色叠加\r\n\r\nvar overlay = {\r\n    name: \"overlay\",\r\n    \r\n    defines: [],\r\n\r\n    vert: `uniform mat4 viewProj;\r\n        attribute vec3 a_position;\r\n        attribute vec2 a_uv0;\r\n        varying vec2 uv0;\r\n        void main () {\r\n            vec4 pos = viewProj * vec4(a_position, 1);\r\n            gl_Position = pos;\r\n            uv0 = a_uv0;\r\n        }\r\n        `,\r\n\r\n    frag: `uniform sampler2D texture;\r\n        varying vec2 uv0;\r\n        uniform vec4 color;\r\n        void main() \r\n        { \r\n            vec4 texColor = texture2D(texture, uv0);  \r\n            if (texColor.r <= 0.5)\r\n            gl_FragColor.r = 2.0 * texColor.r * color.r;\r\n            else\r\n            gl_FragColor.r = 1.0 - 2.0 * (1.0 - texColor.r) * (1.0 - color.r);\r\n            if (texColor.g <= 0.5)\r\n            gl_FragColor.g = 2.0 * texColor.g * color.g;\r\n            else\r\n            gl_FragColor.g = 1.0 - 2.0 * (1.0 - texColor.g) * (1.0 - color.g);\r\n            if (texColor.b <= 0.5)\r\n            gl_FragColor.b = 2.0 * texColor.b * color.b;\r\n            else\r\n            gl_FragColor.b = 1.0 - 2.0 * (1.0 - texColor.b) * (1.0 - color.b);\r\n            gl_FragColor.a = texColor.a * color.a;\r\n        }`,\r\n}\r\n\r\nmodule.exports = overlay;"]}