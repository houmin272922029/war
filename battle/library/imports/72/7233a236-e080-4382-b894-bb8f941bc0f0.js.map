{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\script\\framework\\manager/assets\\script\\framework\\manager\\TrackManager.js"],"names":["CommonUtil","require","ConfigManager","Global","FishFrameData","TrackManager","paths","tracks","cacheTracks","pathInited","animInited","fishLayerInited","init","callback","_loadPath","game","EventManager","on","eventName","newFishGroups","_eventNewFishGroups","uninit","off","reset","setLayerInited","bVal","log","info","self","cc","loader","loadRes","err","object","error","message","parsePath","json","loadResDir","objects","urls","parseTracks","data","parsePathFile","key","path","calcPathVertices","warn","arr","split","speeds","parseSpeeds","parsePoints","points","ctrls","pathId","parseInt","e","str","arrs","i","len","length","pt","v2","parseFloat","push","genAutoControls","track","parseTrackFile","fishId","enterTime","exitTime","findFromCacheTracks","uid","group","j","fishes","servFish","checkCacheTracks","removes","trackObj","endFishFrame","fishFrame","beginFishFrame","_checkSpecialTrack","_checkCacheTrack","splice","handled","state","dispatchEvent","createNewFish","index","sourcePos","wave","getWaveByGroupIndex","tempId","getPathById","zhaoHuanPos","vertices","startXFDAnim","pos","source","startZhaoHuanAnim","trackId","Math","floor","MsgMarco","bossArrive","posArr","setTimeout","virtualBossBorn","event","groups","waveIndex","getTrackByName","_getAnimNamesByTrackId","id","names","confFishes","dataMap","FishAttribute","conf","name","bSpine","isSpine","bUse","_findAnimName","anims","obj","getRoomFishesByType","roomType","animNames","confTrack","TrackAttribute","trackid","len2","anim","currPath","times","waveTime","p2v","x","y","speed","p1c2","z","w","p2c1","vecs","getBezierVertices","pt1","pt2","dist","sub","mag","t","calcWaveTime","currWave","round","calcFrameBySecond","module","exports"],"mappings":"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","file":"TrackManager.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\framework\\manager","sourcesContent":["const CommonUtil = require('CommonUtil');\r\nconst ConfigManager = require('ConfigManager');\r\nconst Global = require('Global');\r\nconst FishFrameData = require('FishFrameData');\r\n\r\nlet TrackManager = {\r\n    paths: {},\r\n    tracks: {},\r\n    cacheTracks: [], // 服务器下发的鱼群信息缓存\r\n    pathInited: false,\r\n    animInited: false,\r\n    fishLayerInited: false, // fishLayer是否已准备好刷鱼\r\n\r\n    init: function (callback) {\r\n        this._loadPath();\r\n        game.EventManager.on(Global.eventName.newFishGroups, this._eventNewFishGroups, this);\r\n        !!callback && callback();\r\n    },\r\n\r\n    uninit: function () {\r\n        game.EventManager.off(Global.eventName.newFishGroups, this._eventNewFishGroups, this);\r\n    },\r\n\r\n    reset: function () {\r\n        this.cacheTracks = [];\r\n        this.fishLayerInited = false;\r\n    },\r\n\r\n    setLayerInited(bVal) {\r\n        this.fishLayerInited = bVal;\r\n    },\r\n\r\n    // 加载鱼路径配置文件\r\n    _loadPath: function () {\r\n        if (this.pathInited) {\r\n            log.info(\"TrackMgr._loadPath: has been called\");\r\n            return;\r\n        }\r\n        this.pathInited = true;\r\n        let self = this;\r\n\r\n        // 读取path文件\r\n        cc.loader.loadRes('fish/path/path', (err, object) => {\r\n            if (err) {\r\n                log.error('TrackMgr.loadPath: error:' + err || err.message);\r\n                return;\r\n            }\r\n            // 读取成功后解析path\r\n            self.parsePath(object.json);\r\n            log.info('success to init path info.');\r\n        });\r\n\r\n        // 读取track文件\r\n        cc.loader.loadResDir('fish/track', (err, objects, urls) => {\r\n            if (err) {\r\n                log.error('TrackMgr.loadTrack: error:' + err || err.message);\r\n                return;\r\n            }\r\n            // 读取成功后解析track\r\n            self.parseTracks(objects, urls);\r\n            log.info('success to init track info.');\r\n        });\r\n    },\r\n\r\n    // 解析从文件中读取的path数据\r\n    parsePath: function (data) {\r\n        this.paths = this.parsePathFile(data);\r\n        for (let key in this.paths) {\r\n            let path = this.paths[key];\r\n            this.calcPathVertices(path); // 计算好路径上所有点的坐标\r\n        }\r\n    },\r\n\r\n    parsePathFile(data) {\r\n        if (!data) {\r\n            log.warn('parsePathFile: data is invalid');\r\n            return [];\r\n        }\r\n\r\n        let paths = {};\r\n        try {\r\n            for (let key in data) {\r\n                let arr = data[key].split(';');\r\n                let speeds = this.parseSpeeds(arr[0]);\r\n                let { points, ctrls } = this.parsePoints(arr[1]);\r\n                let pathId = parseInt(key);\r\n                paths[pathId] = { speeds, points, ctrls };\r\n            }\r\n        } catch (e) {\r\n            log.error('parsePathFile: error to parse path');\r\n        }\r\n\r\n        return paths;\r\n    },\r\n\r\n    parsePoints(str) {\r\n        let points = [];\r\n        let ctrls = [];\r\n        try {\r\n            let arrs = str.split('|');\r\n            for (let i = 0, len = arrs.length; i < len; i++) {\r\n                let arr = arrs[i].split(',');\r\n                let pt = cc.v2(parseFloat(arr[0]), parseFloat(arr[1]));\r\n                points.push(pt);\r\n                // 根据数据点自动生成控制点\r\n                CommonUtil.genAutoControls(points, ctrls);\r\n            }\r\n        } catch (e) {\r\n            log.error('parsePoints: str is invalid');\r\n        }\r\n        return { points, ctrls };\r\n    },\r\n\r\n    parseSpeeds(str) {\r\n        let speeds = [];\r\n        try {\r\n            let arr = str.split('|');\r\n            for (let i = 0, len = arr.length; i < len; i++) {\r\n                speeds[i] = parseFloat(arr[i]);\r\n            }\r\n        } catch (e) {\r\n            log.error('parseSpeeds: str is invalid');\r\n        }\r\n        return speeds;\r\n    },\r\n\r\n    // 解析从文件中读取的track数据\r\n    parseTracks: function (objects, urls) {\r\n        let self = this;\r\n        // for (let i = 0; i < urls.length; i++) {\r\n        //     let index = urls[i].indexOf('_') + 1; // 取文件名并跳过'track_'\r\n        //     let name = urls[i].substring(index);\r\n        //     self.tracks[name] = objects[i].json;\r\n        // }\r\n        for (let key in objects[0].json) {\r\n            let track = this.parseTrackFile(objects[0].json[key]);\r\n            if (track.length > 0) {\r\n                self.tracks[key] = track;\r\n            }\r\n        }\r\n    },\r\n\r\n    parseTrackFile(str) {\r\n        let track = [];\r\n        if (str && str.length > 0) {\r\n            try {\r\n                let arrs = str.split('#');\r\n                for (let i = 0, len = arrs.length; i < len; i++) {\r\n                    let arr = arrs[i].split(';');\r\n                    track[i] = { fishId: parseInt(arr[0]), pathId: parseInt(arr[1]), enterTime: parseFloat(arr[2]), exitTime: parseFloat(arr[3]) };\r\n                }\r\n            } catch (e) {\r\n                log.error('parseTrackFile: error to parse track file');\r\n            }\r\n        }\r\n        return track;\r\n    },\r\n\r\n    // 从缓存中寻找指定id的鱼\r\n    findFromCacheTracks: function (uid) {\r\n        if (!uid) {\r\n            return null;\r\n        }\r\n        for (let i = 0; i < this.cacheTracks.length; i++) {\r\n            let group = this.cacheTracks[i].group;\r\n            for (let j = 0; j < group.fishes.length; j++) {\r\n                let servFish = group.fishes[j];\r\n                if (uid === servFish.uid) {\r\n                    return servFish;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    // 检查缓存中是否有新的track(如果track开始帧小于等于当前鱼帧)\r\n    checkCacheTracks: function () {\r\n        if (!this.fishLayerInited) {\r\n            return;\r\n        }\r\n\r\n        let removes = [];\r\n        for (let i = 0; i < this.cacheTracks.length; i++) {\r\n            let trackObj = this.cacheTracks[i];\r\n            if (trackObj.group.endFishFrame <= FishFrameData.fishFrame) {\r\n                // 如果track结束帧小于等于鱼帧，代表该track已过期，可以从数组移除了\r\n                removes.push(i);\r\n            } else if (trackObj.group.beginFishFrame <= FishFrameData.fishFrame) {\r\n                this._checkSpecialTrack(trackObj);\r\n                this._checkCacheTrack(trackObj.group);\r\n            }\r\n        }\r\n        // 从后往前删\r\n        for (let j = removes.length - 1; j >= 0; j--) {\r\n            this.cacheTracks.splice(removes[j], 1);\r\n        }\r\n    },\r\n\r\n    _checkCacheTrack: function (group) {\r\n        if (!group) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < group.fishes.length; i++) {\r\n            let servFish = group.fishes[i];\r\n            if (!servFish.handled && servFish.endFishFrame <= FishFrameData.fishFrame) {\r\n                servFish.handled = true;\r\n                log.warn('_checkCacheTrack: fish is expired. begin={}, end={}, fishFrame={}', servFish.beginFishFrame, servFish.endFishFrame,\r\n                    FishFrameData.fishFrame);\r\n            } else if (!servFish.handled && !servFish.state && servFish.beginFishFrame <= FishFrameData.fishFrame) {\r\n                // state为0表示存活，1表示死亡\r\n                // 如果鱼开始帧小于等于鱼帧，代表该鱼应开始创建。但此时该项还不能从数组移除，\r\n                // 因为数组索引也是该鱼wave在track中的索引，所以置已处理标记，一直保留到整个group过期删除。\r\n                servFish.handled = true;\r\n                game.EventManager.dispatchEvent(Global.eventName.createNewFish,\r\n                    { servFish: servFish, group: group, index: i });\r\n            }\r\n        }\r\n    },\r\n\r\n    // 检查是否特殊鱼，做相应处理\r\n    _checkSpecialTrack: function (trackObj) {\r\n        if (!trackObj || trackObj.handled) {\r\n            return;\r\n        }\r\n\r\n        let group = trackObj.group;\r\n        // 如果track开始帧小于当前帧，则直接返回，避免退出渔场重进后再次播放动画\r\n        // 但因为GM中使用testtrack命令后收到的开始帧已经晚1帧，所以+2做为容错\r\n        if ((group.beginFishFrame + 2) < FishFrameData.fishFrame) {\r\n            // let index = Math.floor(group.tempId / 100);\r\n            // if (index === 2 || index === 5) {\r\n            //     log.warn('_checkSpecialTrack: ignore boss track={}, begin={}, frame={}', group.tempId,\r\n            //         group.beginFishFrame, FishFrameData.fishFrame);\r\n            // }\r\n            return;\r\n        }\r\n\r\n        // 如果是召唤鱼，则记录它的出生位置，并播放召唤动画\r\n        if (group.sourcePos > 0) {\r\n            trackObj.handled = true;\r\n            let wave = this.getWaveByGroupIndex(group, 0);\r\n            if (!wave) {\r\n                log.error('_checkSpecialTrack: wave(track={},index=0) is not exist', group.tempId);\r\n                return;\r\n            }\r\n            let path = this.getPathById(wave.pathId); // 根据pathId找到对应path\r\n            if (!path) {\r\n                log.error('_checkSpecialTrack: path(id={}) is not exist', wave.pathId);\r\n                return;\r\n            }\r\n\r\n            let zhaoHuanPos = path.vertices[0];\r\n            if (wave.fishId == 47) {\r\n                game.EventManager.dispatchEvent(Global.eventName.startXFDAnim, { pos: zhaoHuanPos, source: group.sourcePos });\r\n            } else {\r\n                game.EventManager.dispatchEvent(Global.eventName.startZhaoHuanAnim, { pos: zhaoHuanPos, source: group.sourcePos, trackId: group.tempId });\r\n            }\r\n        } else {\r\n            // 如果是BOSS鱼，则发送通知播放动画\r\n            let index = Math.floor(group.tempId / 100);\r\n            if (index === 2 || index === 5) {\r\n                trackObj.handled = true;\r\n                game.EventManager.dispatchEvent(Global.MsgMarco.bossArrive, { trackId: group.tempId });\r\n            }\r\n\r\n            // 如果是分身鱼\r\n            if (8 == index) {\r\n                trackObj.handled = true;\r\n                let posArr = [];\r\n                for (let i = 0; i < group.fishes.length; i++) {\r\n                    let wave = this.getWaveByGroupIndex(group, i);\r\n                    if (!wave) {\r\n                        log.error('_checkSpecialTrack: wave(track={},index=0) is not exist', group.tempId);\r\n                        return;\r\n                    }\r\n                    let path = this.getPathById(wave.pathId); // 根据pathId找到对应path\r\n                    if (!path) {\r\n                        log.error('_checkSpecialTrack: path(id={}) is not exist', wave.pathId);\r\n                        return;\r\n                    }\r\n                    posArr.push(path.vertices[0]);\r\n                }\r\n                setTimeout(() => {\r\n                    game.EventManager.dispatchEvent(Global.eventName.virtualBossBorn, posArr);\r\n                }, 1000);\r\n            }\r\n        }\r\n    },\r\n\r\n    // 接收服务器下发的鱼群信息\r\n    _eventNewFishGroups: function (event) {\r\n        let groups = event.data;\r\n        for (let i = 0, len = groups.length; i < len; i++) {\r\n            let group = groups[i];\r\n            let trackObj = { handled: false, group: group };\r\n            this.cacheTracks.push(trackObj);\r\n            log.info('_eventNewFishGroups: recv track_{}(begin={},end={},count={}) from server, frame={}',\r\n                group.tempId, group.beginFishFrame, group.endFishFrame, group.fishes.length, FishFrameData.fishFrame);\r\n        }\r\n    },\r\n\r\n    // 根据group和索引返回相应的wave对象\r\n    getWaveByGroupIndex: function (group, waveIndex) {\r\n        let wave = null;\r\n\r\n        if (!group || waveIndex < 0) {\r\n            log.warn('getWaveByGroupIndex: group={}, index={}', group, waveIndex);\r\n            return wave;\r\n        }\r\n\r\n        let track = this.getTrackByName(group.tempId); // 找到对应track\r\n        if (!track) {\r\n            log.error('error to get track by id={}', group.tempId);\r\n            return wave;\r\n        }\r\n\r\n        wave = track[waveIndex]; // 按顺序索引找到对应wave\r\n        return wave;\r\n    },\r\n\r\n    // 根据路径ID返回该路径下的所有鱼名字\r\n    _getAnimNamesByTrackId: function (id) {\r\n        if (!id) {\r\n            log.warn('TrackMgr: Invalid trackid({})', id);\r\n            return null;\r\n        }\r\n        let track = this.getTrackByName(id);\r\n        if (!track) {\r\n            log.warn('TrackMgr: failed to get track by name({})', id);\r\n            return null;\r\n        }\r\n        let names = [];\r\n        let confFishes = ConfigManager.dataMap.FishAttribute;\r\n        for (let i = 0, len = track.length; i < len; i++) {\r\n            let wave = track[i];\r\n            let conf = confFishes[wave.fishId - 1];\r\n            names.push({ name: conf.name, bSpine: conf.isSpine, bUse: true });\r\n        }\r\n        return names;\r\n    },\r\n\r\n    // 查找指定名字在数组中是否已经存在\r\n    _findAnimName: function (anims, name) {\r\n        for (let i = 0, len = anims.length; i < len; i++) {\r\n            let obj = anims[i];\r\n            if (obj.name === name) {\r\n                return obj;\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    // 根据渔场级别得到该渔场所有鱼的名字\r\n    getRoomFishesByType: function (roomType) {\r\n        if (!roomType) {\r\n            log.warn('TrackMgr: Invalid roomType({})', roomType);\r\n            return null;\r\n        }\r\n\r\n        let animNames = [];\r\n        let confTrack = ConfigManager.dataMap.TrackAttribute;\r\n        for (let i = 0, len = confTrack.length; i < len; i++) {\r\n            let track = confTrack[i];\r\n            let key = 'roomType' + roomType;\r\n            if (1 === track[key]) {\r\n                let anims = this._getAnimNamesByTrackId(track.trackid);\r\n                if (anims) {\r\n                    for (let j = 0, len2 = anims.length; j < len2; j++) {\r\n                        let anim = anims[j];\r\n                        if (!this._findAnimName(animNames, anim.name)) {\r\n                            animNames.push(anim);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        log.info('getRoomFishesByType: length={}, type={}', animNames.length, roomType);\r\n        return animNames;\r\n    },\r\n\r\n    // 根据track名称返回相应的track数据\r\n    getTrackByName: function (name) {\r\n        let track = null;\r\n        if (!!name && !!this.tracks) {\r\n            track = this.tracks[name];\r\n        }\r\n        return track;\r\n    },\r\n\r\n    // 根据pathId在返回相应的path数据\r\n    getPathById: function (pathId) {\r\n        let path = null;\r\n        if (pathId > 0 && this.paths) {\r\n            path = this.paths[pathId];\r\n        }\r\n        return path;\r\n    },\r\n\r\n    // 计算整条路径上所有贝塞尔曲线各自切分成多个小段后所有点的坐标，并返回总时间\r\n    calcPathVertices: function (currPath) {\r\n        let points = currPath.points;\r\n        let ctrls = currPath.ctrls;\r\n        currPath.vertices = [];\r\n        currPath.times = [0];\r\n        let waveTime = 0;\r\n\r\n        // points数组存放的是逻辑坐标，vertices需要的是实际坐标\r\n        let pos = CommonUtil.p2v(points[0]);\r\n        currPath.vertices[0] = cc.v2(pos.x, pos.y);\r\n\r\n        for (let i = 0, len = points.length - 1; i < len; i++) {\r\n            let speed = currPath.speeds[i];\r\n\r\n            let p1c2 = cc.v2(ctrls[i].z, ctrls[i].w);\r\n            let p2c1 = cc.v2(ctrls[i + 1].x, ctrls[i + 1].y);\r\n            let vecs = CommonUtil.getBezierVertices(points[i], p1c2, p2c1, points[i + 1], 10/*frames*/);\r\n\r\n            // 因为vecs的第1个和最后1个点必定是起点和终点，而第1段线段的终点也是第2段线段的起点，\r\n            // 所以存储时需要从第2个点开始，相当于去重。\r\n            // vecs数组存放的是逻辑坐标，vertices需要的是实际坐标\r\n            for (let i = 1, len = vecs.length; i < len; i++) {\r\n                pos = CommonUtil.p2v(vecs[i]);\r\n                currPath.vertices.push(cc.v2(pos.x, pos.y));\r\n            }\r\n\r\n            for (let i = 0, len = vecs.length - 1; i < len; i++) {\r\n                let pt1 = cc.v2(vecs[i].x, vecs[i].y);\r\n                let pt2 = cc.v2(vecs[i + 1].x, vecs[i + 1].y);\r\n                let dist = pt1.sub(pt2).mag();\r\n                let t = dist / speed;\r\n                waveTime += t;\r\n                // 保存每小段时间到数组，避免鱼游动时重复运算(注意：时间不是均等的)\r\n                currPath.times.push(waveTime);\r\n            }\r\n        }\r\n        return waveTime;\r\n    },\r\n\r\n    // 计算整条路径上所有贝塞尔曲线各自切分成多个小段后所有点的坐标，并返回总时间\r\n    // 这个方法暂时不用\r\n    calcWaveTime: function (currWave, currPath) {\r\n        let points = currPath.points;\r\n        let ctrls = currPath.ctrls;\r\n        currPath.vertices = [];\r\n        currPath.times = [0];\r\n        let waveTime = 0;\r\n\r\n        // points数组存放的是逻辑坐标，vertices需要的是实际坐标\r\n        currPath.vertices[0] = CommonUtil.p2v(points[0]);\r\n\r\n        for (let i = 0, len = points.length - 1; i < len; i++) {\r\n            let p1c2 = cc.v2(ctrls[i].z, ctrls[i].w);\r\n            let p2c1 = cc.v2(ctrls[i + 1].x, ctrls[i + 1].y);\r\n\r\n            let vecs = CommonUtil.getBezierVertices(points[i], p1c2, p2c1, points[i + 1], 10);\r\n            // 因为vecs的第1个和最后1个点必定是起点和终点，而第1段线段的终点也是第2段线段的起点，\r\n            // 所以存储时需要从第2个点开始，相当于去重。\r\n            // vecs数组存放的是逻辑坐标，vertices需要的是实际坐标\r\n            for (let i = 1, len = vecs.length; i < len; i++) {\r\n                currPath.vertices.push(CommonUtil.p2v(vecs[i]));\r\n            }\r\n\r\n            let speed = currPath.speeds[i];\r\n            for (let i = 0, len = vecs.length - 1; i < len; i++) {\r\n                let pt1 = cc.v2(vecs[i].x, vecs[i].y);\r\n                let pt2 = cc.v2(vecs[i + 1].x, vecs[i + 1].y);\r\n                let dist = pt1.sub(pt2).mag();\r\n                let t = dist / speed;\r\n                waveTime += Math.round(CommonUtil.calcFrameBySecond(t)); // 四舍五入取整\r\n                // 保存每小段时间到数组，避免鱼游动时重复运算\r\n                currPath.times.push(waveTime);\r\n            }\r\n        }\r\n        return waveTime;\r\n    },\r\n}\r\n\r\nmodule.exports = TrackManager;\r\n"]}