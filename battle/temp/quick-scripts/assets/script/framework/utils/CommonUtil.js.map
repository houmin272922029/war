{"version":3,"sources":["CommonUtil.js"],"names":["SCREEN_RATIO","CommonUtil","framesPerSecond","secondsPerFrame","localFramesPerSecond","secondsPerLocalFrame","getAllTextureSize","allRes","cc","textureCache","getAllTextures","fileLimit","totalSize","k","length","psize","parseInt","width","height","Math","round","calcSecondByFrame","frame","calcFrameBySecond","sec","floor","localFrameBySecond","frame2LocalFrame","frames","getTick","d","Date","getTime","visibleSize","size","visibleRect","rect","invalidPos","init","view","getVisibleSize","winSize","origin","getVisibleOrigin","x","y","getCubicBezierVertex","p0","p1","p2","p3","t","pow","getBezierVertices","start","ctrl1","ctrl2","end","segment","vecs","i","pt","push","genAutoControls","points","ctrls","RATIO","vx2px","len","z","w","dir2","sub","normalize","p1c2","add","mul","p2c1","dir3","p1c1","getVecAngle","currVec","nextVec","vec","v2","a1","atan2","r1","macro","DEG","formatVec2","toFixed","formatVec4","v4","vx","vsize","vy2py","vy","px2vx","px","py2vy","py","v2p","v","p","p2v","clamp","a","b","keepTwoFromStr","str","num","parseFloat","keepTwoFromNum","ret","posInScreen","pos","contains","rectInScreen","rc","intersects","containsInBoomArea","radius","argPos","disX","disY","distancePow","distance","sqrt","getDistanceByPoint","pos1","pos2","param","abs","module","exports"],"mappings":";;;;;;AACA,IAAIA,eAAe,GAAnB;AACA,IAAIC,aAAa;;AAEbC,qBAAiB,EAFJ,EAES;AACtBC,qBAAiB,MAAM,EAHV;;AAKbC,0BAAsB,GALT,EAKc;AAC3BC,0BAAsB,IAAI,GANb,EAMkB;;AAE/B;AACAC,uBAAmB,6BAAW;AAC1B,YAAIC,SAASC,GAAGC,YAAH,CAAgBC,cAAhB,EAAb;AACA,YAAIC,YAAY,OAAO,IAAvB;AACA,YAAIC,YAAY,CAAhB;AACA,aAAK,IAAIC,IAAI,CAAb,EAAiBA,IAAIN,OAAOO,MAA5B,EAAqCD,GAArC,EAA0C;AACtC,gBAAIE,QAAQC,SAAST,OAAOM,CAAP,EAAUI,KAAnB,IAA4BD,SAAST,OAAOM,CAAP,EAAUK,MAAnB,CAA5B,GAAyD,CAArE;AACAN,yBAAaG,KAAb;AACH;AACD,eAAOI,KAAKC,KAAL,CAAWR,YAAUD,SAArB,CAAP,CAR0B,CAQc;AAC3C,KAlBY;;AAoBb;AACAU,uBAAmB,2BAASC,KAAT,EAAgB;AAC/B,eAAQA,QAAQ,KAAKnB,eAArB;AACH,KAvBY;;AAyBb;AACAoB,uBAAmB,2BAASC,GAAT,EAAc;AAC7B,eAAOL,KAAKM,KAAL,CAAWD,MAAM,KAAKtB,eAAtB,CAAP,CAD6B,CACkB;AAClD,KA5BY;;AA8Bb;AACAwB,wBAAoB,4BAASF,GAAT,EAAc;AAC9B,eAAOL,KAAKM,KAAL,CAAWD,MAAM,KAAKpB,oBAAtB,CAAP;AACH,KAjCY;;AAmCb;AACA;AACAuB,sBAAkB,0BAASC,MAAT,EAAiB;AAC/B,eAAOT,KAAKM,KAAL,CAAWG,UAAU,KAAKxB,oBAAL,GAA0B,KAAKF,eAAzC,CAAX,CAAP;AACH,KAvCY;;AAyCb;AACA2B,aAAS,mBAAW;AAChB,YAAIC,IAAI,IAAIC,IAAJ,EAAR;AACA,eAAOD,EAAEE,OAAF,EAAP;AACH,KA7CY;;AA+CbC,iBAAazB,GAAG0B,IAAH,CAAQ,CAAR,EAAW,CAAX,CA/CA;AAgDbC,iBAAa3B,GAAG4B,IAAH,CAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAhDA;AAiDbC,gBAAY,CAAC,KAjDA;;AAmDbC,UAAM,gBAAY;AACd,aAAKL,WAAL,GAAmBzB,GAAG+B,IAAH,CAAQC,cAAR,EAAnB;AACA,aAAKC,OAAL,GAAejC,GAAGiC,OAAlB;AACA,YAAIC,SAASlC,GAAG+B,IAAH,CAAQI,gBAAR,EAAb;AACA,aAAKR,WAAL,GAAmB3B,GAAG4B,IAAH,CAAQM,OAAOE,CAAf,EAAkBF,OAAOG,CAAzB,EAA4B,KAAKZ,WAAL,CAAiBhB,KAA7C,EAAoD,KAAKgB,WAAL,CAAiBf,MAArE,CAAnB;AACH,KAxDY;;AA0Db;AACA4B,0BAAsB,8BAAUC,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,CAA1B,EAA6B;AAC/C,YAAIP,IAAIG,GAAGH,CAAH,GAAOzB,KAAKiC,GAAL,CAAS,IAAID,CAAb,EAAgB,CAAhB,CAAP,GAA4B,IAAIH,GAAGJ,CAAP,GAAWO,CAAX,GAAehC,KAAKiC,GAAL,CAAS,IAAID,CAAb,EAAgB,CAAhB,CAA3C,GAAgE,IAAIF,GAAGL,CAAP,GAAWO,CAAX,GAAeA,CAAf,IAAoB,IAAIA,CAAxB,CAAhE,GAA6FD,GAAGN,CAAH,GAAOO,CAAP,GAAWA,CAAX,GAAeA,CAApH;AACA,YAAIN,IAAIE,GAAGF,CAAH,GAAO1B,KAAKiC,GAAL,CAAS,IAAID,CAAb,EAAgB,CAAhB,CAAP,GAA4B,IAAIH,GAAGH,CAAP,GAAWM,CAAX,GAAehC,KAAKiC,GAAL,CAAS,IAAID,CAAb,EAAgB,CAAhB,CAA3C,GAAgE,IAAIF,GAAGJ,CAAP,GAAWM,CAAX,GAAeA,CAAf,IAAoB,IAAIA,CAAxB,CAAhE,GAA6FD,GAAGL,CAAH,GAAOM,CAAP,GAAWA,CAAX,GAAeA,CAApH;AACA,eAAO,EAAEP,GAAGA,CAAL,EAAQC,GAAGA,CAAX,EAAP;AACH,KA/DY;;AAiEb;AACAQ,uBAAmB,2BAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,GAA/B,EAAoCC,OAApC,EAA6C;AAC5D,YAAIP,IAAI,CAAR;AACA,YAAIQ,OAAO,EAAX;;AAEA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,OAApB,EAA6BE,GAA7B,EAAkC;AAC9B,gBAAIC,KAAK,KAAKf,oBAAL,CAA0BQ,KAA1B,EAAiCC,KAAjC,EAAwCC,KAAxC,EAA+CC,GAA/C,EAAoDN,CAApD,CAAT;AACAQ,iBAAKG,IAAL,CAAUD,EAAV;AACAV,iBAAK,MAAMO,OAAX;AACH;;AAEDC,aAAKG,IAAL,CAAU,EAAElB,GAAGa,IAAIb,CAAT,EAAYC,GAAGY,IAAIZ,CAAnB,EAAV;AACA,eAAOc,IAAP;AACH,KA9EY;;AAgFb;AACA;AACA;AACAI,qBAAiB,yBAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACtC,YAAIC,QAAQ,KAAKC,KAAL,CAAW,EAAX,CAAZ,CADsC,CACV;AAC5B,YAAIC,MAAMJ,OAAOlD,MAAjB;AACA,YAAIsD,MAAM,CAAN,IAAWH,MAAMnD,MAArB,EAA6B;AACzB;AACH;;AAED,YAAIsD,QAAQ,CAAZ,EAAe;AACX,gBAAIP,KAAKG,OAAO,CAAP,CAAT;AACAC,kBAAMH,IAAN,CAAW,EAAElB,GAAGiB,GAAGjB,CAAR,EAAWC,GAAGgB,GAAGhB,CAAjB,EAAoBwB,GAAGR,GAAGjB,CAA1B,EAA6B0B,GAAGT,GAAGhB,CAAnC,EAAX;AACA;AACH;;AAED;AACA,YAAI0B,OAAQP,OAAOI,MAAM,CAAb,EAAgBI,GAAhB,CAAoBR,OAAOI,MAAM,CAAb,CAApB,CAAD,CAAuCK,SAAvC,EAAX;;AAEA;AACA,YAAIL,QAAQ,CAAZ,EAAe;AACX,gBAAIM,OAAOV,OAAO,CAAP,EAAUW,GAAV,CAAcJ,KAAKK,GAAL,CAASV,KAAT,CAAd,CAAX;AACA,gBAAIW,OAAOb,OAAO,CAAP,EAAUQ,GAAV,CAAcD,KAAKK,GAAL,CAASV,KAAT,CAAd,CAAX;AACAD,kBAAM,CAAN,EAASI,CAAT,GAAaK,KAAK9B,CAAlB;AACAqB,kBAAM,CAAN,EAASK,CAAT,GAAaI,KAAK7B,CAAlB;AACAoB,kBAAMH,IAAN,CAAW,EAAElB,GAAGiC,KAAKjC,CAAV,EAAaC,GAAGgC,KAAKhC,CAArB,EAAwBwB,GAAGL,OAAO,CAAP,EAAUpB,CAArC,EAAwC0B,GAAGN,OAAO,CAAP,EAAUnB,CAArD,EAAX;AACA;AACH;;AAED;AACA,YAAIiC,OAAQd,OAAOI,MAAM,CAAb,EAAgBI,GAAhB,CAAoBR,OAAOI,MAAM,CAAb,CAApB,CAAD,CAAuCK,SAAvC,EAAX;AACA,YAAIM,OAAOf,OAAOI,MAAM,CAAb,EAAgBI,GAAhB,CAAoBM,KAAKF,GAAL,CAASV,KAAT,CAApB,CAAX;AACA,YAAIQ,OAAOV,OAAOI,MAAM,CAAb,EAAgBO,GAAhB,CAAoBG,KAAKF,GAAL,CAASV,KAAT,CAApB,CAAX;AACAD,cAAMG,MAAM,CAAZ,IAAiB,EAAExB,GAAGmC,KAAKnC,CAAV,EAAaC,GAAGkC,KAAKlC,CAArB,EAAwBwB,GAAGK,KAAK9B,CAAhC,EAAmC0B,GAAGI,KAAK7B,CAA3C,EAAjB;;AAEA,YAAIgC,OAAOb,OAAOI,MAAM,CAAb,EAAgBI,GAAhB,CAAoBD,KAAKK,GAAL,CAASV,KAAT,CAApB,CAAX;AACAD,cAAMH,IAAN,CAAW,EAAElB,GAAGiC,KAAKjC,CAAV,EAAaC,GAAGgC,KAAKhC,CAArB,EAAwBwB,GAAGL,OAAOI,MAAM,CAAb,EAAgBxB,CAA3C,EAA8C0B,GAAGN,OAAOI,MAAM,CAAb,EAAgBvB,CAAjE,EAAX;AACH,KArHY;;AAuHb;AACA;AACAmC,iBAAa,qBAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACrC;AACA,YAAIC,MAAM3E,GAAG4E,EAAH,CAAMF,OAAN,EAAeV,GAAf,CAAmBhE,GAAG4E,EAAH,CAAMH,OAAN,CAAnB,CAAV;AACA,YAAII,KAAK,CAAClE,KAAKmE,KAAL,CAAWH,IAAItC,CAAf,EAAkBsC,IAAIvC,CAAtB,CAAV;AACA;AACA,YAAI2C,KAAKF,KAAK7E,GAAGgF,KAAH,CAASC,GAAvB;AACA,eAAOF,EAAP;AACH,KAhIY;;AAkIb;AACAG,gBAAY,oBAAUN,EAAV,EAAc;AACtB,YAAIxC,IAAIwC,GAAGxC,CAAH,CAAK+C,OAAL,CAAa,CAAb,CAAR;AACA,YAAI9C,IAAIuC,GAAGvC,CAAH,CAAK8C,OAAL,CAAa,CAAb,CAAR;AACA,eAAO,EAAE/C,GAAGA,CAAL,EAAQC,GAAGA,CAAX,EAAP;AACH,KAvIY;;AAyIb;AACA+C,gBAAY,oBAAUC,EAAV,EAAc;AACtB,YAAIjD,IAAIiD,GAAGjD,CAAH,CAAK+C,OAAL,CAAa,CAAb,CAAR;AACA,YAAI9C,IAAIgD,GAAGhD,CAAH,CAAK8C,OAAL,CAAa,CAAb,CAAR;AACA,YAAItB,IAAIwB,GAAGxB,CAAH,CAAKsB,OAAL,CAAa,CAAb,CAAR;AACA,YAAIrB,IAAIuB,GAAGvB,CAAH,CAAKqB,OAAL,CAAa,CAAb,CAAR;AACA,eAAO,EAAE/C,GAAGA,CAAL,EAAQC,GAAGA,CAAX,EAAcwB,GAAGA,CAAjB,EAAoBC,GAAGA,CAAvB,EAAP;AACH,KAhJY;;AAkJbH,WAAO,eAAU2B,EAAV,EAAc;AACjB,YAAIC,QAAQvF,GAAG+B,IAAH,CAAQC,cAAR,EAAZ;AACA,eAAQsD,KAAKC,MAAM9E,KAAX,GAAmBjB,YAA3B;AACA;AACH,KAtJY;;AAwJbgG,WAAO,eAAUC,EAAV,EAAc;AACjB,YAAIF,QAAQvF,GAAG+B,IAAH,CAAQC,cAAR,EAAZ;AACA,eAAQyD,KAAKF,MAAM7E,MAAX,GAAoBlB,YAA5B;AACA;AACH,KA5JY;;AA8JbkG,WAAO,eAAUC,EAAV,EAAc;AACjB,YAAIJ,QAAQvF,GAAG+B,IAAH,CAAQC,cAAR,EAAZ;AACA,eAAQ2D,KAAKJ,MAAM9E,KAAX,GAAmBjB,YAA3B;AACA;AACH,KAlKY;;AAoKboG,WAAO,eAAUC,EAAV,EAAc;AACjB,YAAIN,QAAQvF,GAAG+B,IAAH,CAAQC,cAAR,EAAZ;AACA,eAAQ6D,KAAKN,MAAM7E,MAAX,GAAoBlB,YAA5B;AACA;AACH,KAxKY;;AA0Kb;AACAsG,SAAK,aAAUC,CAAV,EAAa;AACd,YAAIC,IAAI,EAAE5D,GAAG,KAAKuB,KAAL,CAAWoC,EAAE3D,CAAb,CAAL,EAAsBC,GAAG,KAAKmD,KAAL,CAAWO,EAAE1D,CAAb,CAAzB,EAAR;AACA,eAAO2D,CAAP;AACH,KA9KY;;AAgLb;AACAC,SAAK,aAAUD,CAAV,EAAa;AACd,YAAID,IAAI,EAAE3D,GAAG,KAAKsD,KAAL,CAAWM,EAAE5D,CAAb,CAAL,EAAsBC,GAAG,KAAKuD,KAAL,CAAWI,EAAE3D,CAAb,CAAzB,EAAR;AACA,eAAO0D,CAAP;AACH,KApLY;;AAsLb;AACAG,WAAO,eAAU9D,CAAV,EAAa+D,CAAb,EAAgBC,CAAhB,EAAmB;AACtB,eAAQhE,IAAI+D,CAAL,GAAUA,CAAV,GAAgB/D,IAAIgE,CAAL,GAAUA,CAAV,GAAchE,CAApC;AACH,KAzLY;;AA2Lb;AACAiE,oBAAgB,wBAAUC,GAAV,EAAe;AAC3B,YAAIC,MAAMC,WAAWF,GAAX,CAAV;AACA,eAAO,KAAKG,cAAL,CAAoBF,GAApB,CAAP;AACH,KA/LY;;AAiMb;AACAE,oBAAgB,wBAAUF,GAAV,EAAe;AAC3B,YAAIG,MAAM/F,KAAKC,KAAL,CAAW2F,MAAM,GAAjB,IAAwB,GAAlC;AACA,eAAOG,GAAP;AACH,KArMY;;AAuMb;AACAC,iBAAa,qBAAUC,GAAV,EAAe;AACxB,eAAO,KAAKjF,WAAL,CAAiBkF,QAAjB,CAA0BD,GAA1B,CAAP;AACA;AACA;AACH,KA5MY;;AA8Mb;AACAE,kBAAc,sBAAUC,EAAV,EAAc;AACxB;AACA;AACA;AACA,eAAO,KAAKpF,WAAL,CAAiBqF,UAAjB,CAA4BD,EAA5B,CAAP,CAJwB,CAIgB;AAC3C,KApNY;;AAsNb;AACAE,wBAAoB,4BAAUL,GAAV,EAAeM,MAAf,EAAuBC,MAAvB,EAA+B;AAC/C,YAAIC,OAAOR,IAAIxE,CAAJ,GAAQ+E,OAAO/E,CAA1B;AACA,YAAIiF,OAAOT,IAAIvE,CAAJ,GAAQ8E,OAAO9E,CAA1B;AACA,YAAIiF,cAAc3G,KAAKiC,GAAL,CAASwE,IAAT,EAAe,CAAf,IAAoBzG,KAAKiC,GAAL,CAASyE,IAAT,EAAe,CAAf,CAAtC;AACA,YAAIE,WAAW5G,KAAK6G,IAAL,CAAUF,WAAV,CAAf;AACA,YAAIC,WAAWL,MAAf,EAAuB;AACnB,mBAAO,IAAP;AACH,SAFD,MAEO;AACH,mBAAO,KAAP;AACH;AACJ,KAjOY;;AAmOb;AACAO,wBAAoB,4BAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACtC,YAAIC,QAAQjH,KAAKiC,GAAL,CAAS8E,KAAKtF,CAAL,GAASuF,KAAKvF,CAAvB,EAA0B,CAA1B,IAA+BzB,KAAKiC,GAAL,CAAS8E,KAAKrF,CAAL,GAASsF,KAAKtF,CAAvB,EAA0B,CAA1B,CAA3C;AACA,YAAIkF,WAAW5G,KAAK6G,IAAL,CAAUI,KAAV,CAAf;AACA,eAAOjH,KAAKkH,GAAL,CAASN,QAAT,CAAP;AACH;AAxOY,CAAjB;;AA2OAO,OAAOC,OAAP,GAAiBtI,UAAjB","file":"CommonUtil.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\framework\\utils","sourcesContent":["\r\nvar SCREEN_RATIO = 100;\r\nlet CommonUtil = {\r\n\r\n    framesPerSecond: 20,  // 默认每秒20帧(服务器帧率)\r\n    secondsPerFrame: 1.0 / 20,\r\n\r\n    localFramesPerSecond: 4.0, // 鱼本地帧率/每秒和服务器同步几次\r\n    secondsPerLocalFrame: 1 / 4.0, // 每个本地帧消耗的时间\r\n    \r\n    // 得到当前内存中所有纹理所占内存大小(单位为M)\r\n    getAllTextureSize: function() {\r\n        let allRes = cc.textureCache.getAllTextures();\r\n        let fileLimit = 1024 * 1024;\r\n        let totalSize = 0;\r\n        for (let k = 0 ; k < allRes.length ; k++) {\r\n            let psize = parseInt(allRes[k].width) * parseInt(allRes[k].height) * 4;\r\n            totalSize += psize;\r\n        }\r\n        return Math.round(totalSize/fileLimit); // 四舍五入取整\r\n    },\r\n\r\n    // 把帧数量转换为时间秒数(例如：当前游戏设定为每秒20帧，则100帧应该返回5秒)\r\n    calcSecondByFrame: function(frame) {\r\n        return (frame * this.secondsPerFrame);\r\n    },\r\n\r\n    // 把秒数转换为帧数量(例如：当前游戏设定为每秒20帧，则5秒应该返回100帧)\r\n    calcFrameBySecond: function(sec) {\r\n        return Math.floor(sec * this.framesPerSecond); // 向下取整\r\n    },\r\n\r\n    // 把秒数转换为本地帧数量\r\n    localFrameBySecond: function(sec) {\r\n        return Math.floor(sec * this.localFramesPerSecond);\r\n    },\r\n\r\n    // 把服务器帧数量转换为本地帧数量\r\n    // 例如：服务器每秒20帧，本地每秒30帧，则5个服务器帧相当于7.5个本地帧\r\n    frame2LocalFrame: function(frames) {\r\n        return Math.floor(frames * (this.localFramesPerSecond/this.framesPerSecond));\r\n    },\r\n\r\n    // 返回1970-01-01至今的毫秒数\r\n    getTick: function() {\r\n        let d = new Date();\r\n        return d.getTime();\r\n    },\r\n    \r\n    visibleSize: cc.size(0, 0),\r\n    visibleRect: cc.rect(0, 0, 0, 0),\r\n    invalidPos: -10000,\r\n\r\n    init: function () {\r\n        this.visibleSize = cc.view.getVisibleSize();\r\n        this.winSize = cc.winSize;\r\n        let origin = cc.view.getVisibleOrigin();\r\n        this.visibleRect = cc.rect(origin.x, origin.y, this.visibleSize.width, this.visibleSize.height);\r\n    },\r\n\r\n    // 根据当前时间进度返回三阶贝塞尔曲线的实时点位置\r\n    getCubicBezierVertex: function (p0, p1, p2, p3, t) {\r\n        let x = p0.x * Math.pow(1 - t, 3) + 3 * p1.x * t * Math.pow(1 - t, 2) + 3 * p2.x * t * t * (1 - t) + p3.x * t * t * t;\r\n        let y = p0.y * Math.pow(1 - t, 3) + 3 * p1.y * t * Math.pow(1 - t, 2) + 3 * p2.y * t * t * (1 - t) + p3.y * t * t * t;\r\n        return { x: x, y: y };\r\n    },\r\n\r\n    // 根据输入小段数返回当前贝塞尔曲线切分成该小段数量后相应点的位置\r\n    getBezierVertices: function (start, ctrl1, ctrl2, end, segment) {\r\n        let t = 0;\r\n        let vecs = [];\r\n\r\n        for (let i = 0; i < segment; i++) {\r\n            let pt = this.getCubicBezierVertex(start, ctrl1, ctrl2, end, t);\r\n            vecs.push(pt);\r\n            t += 1.0 / segment;\r\n        }\r\n\r\n        vecs.push({ x: end.x, y: end.y });\r\n        return vecs;\r\n    },\r\n\r\n    // 根据起点和终点自动生成控制点\r\n    // 输入：points为Vec2数组（起点、终点）\r\n    // 输出：ctrls为{x,y,z,w}数组（控制点）\r\n    genAutoControls: function (points, ctrls) {\r\n        let RATIO = this.vx2px(60); // 原为50,现先转换为逻辑坐标\r\n        let len = points.length;\r\n        if (len - 1 != ctrls.length) {\r\n            return;\r\n        }\r\n\r\n        if (len === 1) {\r\n            let pt = points[0];\r\n            ctrls.push({ x: pt.x, y: pt.y, z: pt.x, w: pt.y });\r\n            return;\r\n        }\r\n\r\n        // len >= 2\r\n        let dir2 = (points[len - 1].sub(points[len - 2])).normalize();\r\n\r\n        // len == 2\r\n        if (len === 2) {\r\n            let p1c2 = points[0].add(dir2.mul(RATIO));\r\n            let p2c1 = points[1].sub(dir2.mul(RATIO));\r\n            ctrls[0].z = p1c2.x;\r\n            ctrls[0].w = p1c2.y;\r\n            ctrls.push({ x: p2c1.x, y: p2c1.y, z: points[1].x, w: points[1].y });\r\n            return;\r\n        }\r\n\r\n        // len > 2\r\n        let dir3 = (points[len - 1].sub(points[len - 3])).normalize();\r\n        let p1c1 = points[len - 2].sub(dir3.mul(RATIO));\r\n        let p1c2 = points[len - 2].add(dir3.mul(RATIO));\r\n        ctrls[len - 2] = { x: p1c1.x, y: p1c1.y, z: p1c2.x, w: p1c2.y };\r\n\r\n        let p2c1 = points[len - 1].sub(dir2.mul(RATIO));\r\n        ctrls.push({ x: p2c1.x, y: p2c1.y, z: points[len - 1].x, w: points[len - 1].y });\r\n    },\r\n\r\n    // 得到两点之间的旋转角度(顺时针方向为正)\r\n    // 默认鱼图片头朝右，往右下方向游，角度应为正；往右上方向游，角度应为负\r\n    getVecAngle: function (currVec, nextVec) {\r\n        // let p1 = (180 / Math.PI);\r\n        let vec = cc.v2(nextVec).sub(cc.v2(currVec));\r\n        let a1 = -Math.atan2(vec.y, vec.x);\r\n        //let r1 = a1 * p1 + 180; // 图片本身头朝左，角度需要加180\r\n        let r1 = a1 * cc.macro.DEG;\r\n        return r1;\r\n    },\r\n\r\n    // 把二元向量中的浮点数格式化为小数点后只带2位\r\n    formatVec2: function (v2) {\r\n        let x = v2.x.toFixed(2);\r\n        let y = v2.y.toFixed(2);\r\n        return { x: x, y: y };\r\n    },\r\n\r\n    // 把四元向量中的浮点数格式化为小数点后只带2位\r\n    formatVec4: function (v4) {\r\n        let x = v4.x.toFixed(2);\r\n        let y = v4.y.toFixed(2);\r\n        let z = v4.z.toFixed(2);\r\n        let w = v4.w.toFixed(2);\r\n        return { x: x, y: y, z: z, w: w };\r\n    },\r\n\r\n    vx2px: function (vx) {\r\n        let vsize = cc.view.getVisibleSize();\r\n        return (vx / vsize.width * SCREEN_RATIO);\r\n        // return (vx / this.visibleSize.width * SCREEN_RATIO);\r\n    },\r\n\r\n    vy2py: function (vy) {\r\n        let vsize = cc.view.getVisibleSize();\r\n        return (vy / vsize.height * SCREEN_RATIO);\r\n        // return (vy / this.visibleSize.height * SCREEN_RATIO);\r\n    },\r\n\r\n    px2vx: function (px) {\r\n        let vsize = cc.view.getVisibleSize();\r\n        return (px * vsize.width / SCREEN_RATIO);\r\n        // return (px * this.visibleSize.width / SCREEN_RATIO);\r\n    },\r\n\r\n    py2vy: function (py) {\r\n        let vsize = cc.view.getVisibleSize();\r\n        return (py * vsize.height / SCREEN_RATIO);\r\n        // return (py * this.visibleSize.height / SCREEN_RATIO);\r\n    },\r\n\r\n    // 把屏幕坐标转换为逻辑坐标\r\n    v2p: function (v) {\r\n        let p = { x: this.vx2px(v.x), y: this.vy2py(v.y) };\r\n        return p;\r\n    },\r\n\r\n    // 把逻辑坐标转换为屏幕坐标\r\n    p2v: function (p) {\r\n        let v = { x: this.px2vx(p.x), y: this.py2vy(p.y) };\r\n        return v;\r\n    },\r\n\r\n    // 限制x的值在a和b之间，小于a则返回a，大于b则返回b\r\n    clamp: function (x, a, b) {\r\n        return (x < a) ? a : ((x > b) ? b : x);\r\n    },\r\n\r\n    // 保留小数点后2位，输入参数为字符串\r\n    keepTwoFromStr: function (str) {\r\n        let num = parseFloat(str);\r\n        return this.keepTwoFromNum(num);\r\n    },\r\n\r\n    // 保留小数点后2位，输入参数为浮点数\r\n    keepTwoFromNum: function (num) {\r\n        let ret = Math.round(num * 100) / 100;\r\n        return ret;\r\n    },\r\n\r\n    // 坐标是否在屏幕内\r\n    posInScreen: function (pos) {\r\n        return this.visibleRect.contains(pos);\r\n        // let vsize = cc.view.getVisibleSize();\r\n        // return (pos.x >= 0 && pos.x < vsize.width && pos.y >= 0 && pos.y < vsize.height) ? true : false;\r\n    },\r\n\r\n    // 矩形是否在屏幕内\r\n    rectInScreen: function (rc) {\r\n        // let b = this.visibleRect.intersects(rc);\r\n        // log.info('rectInScreen: ret=' +b +', screen={}, rc={}', this.visibleRect, rc);\r\n        // return b;\r\n        return this.visibleRect.intersects(rc); // 两矩形有相交即认为在屏幕内\r\n    },\r\n\r\n    //是否在圆形的爆炸半径内\r\n    containsInBoomArea: function (pos, radius, argPos) {\r\n        let disX = pos.x - argPos.x;\r\n        let disY = pos.y - argPos.y;\r\n        let distancePow = Math.pow(disX, 2) + Math.pow(disY, 2);\r\n        let distance = Math.sqrt(distancePow);\r\n        if (distance < radius) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    //计算两点距离\r\n    getDistanceByPoint: function (pos1, pos2) {\r\n        let param = Math.pow(pos1.x - pos2.x, 2) + Math.pow(pos1.y - pos2.y, 2);\r\n        let distance = Math.sqrt(param);\r\n        return Math.abs(distance);\r\n    },\r\n}\r\n\r\nmodule.exports = CommonUtil;\r\n"]}