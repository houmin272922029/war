{"version":3,"sources":["Http.js"],"names":["Global","require","Http","sendRequest","path","data","handler","extraUrl","str","k","url","requestURL","sendXHR","responseText","status","ret","JSON","parse","responseHandler","log","info","indexOf","xhr","cc","loader","getXMLHttpRequest","onreadystatechange","readyState","error","open","sys","isNative","setRequestHeader","timeout","send","module","exports"],"mappings":";;;;;;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA;;;;AAIA,IAAIC,OAAO;;AAEP;AACAC,iBAAa,qBAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyC;AAClD,YAAIC,MAAM,GAAV;AACA,aAAK,IAAIC,CAAT,IAAcJ,IAAd,EAAoB;AAChB,gBAAIG,OAAO,GAAX,EAAgB;AACZA,uBAAO,GAAP;AACH;AACDA,mBAAOC,IAAI,GAAJ,GAAUJ,KAAKI,CAAL,CAAjB;AACH;AACD,YAAIF,YAAY,IAAhB,EAAsB;AAClBA,uBAAWP,OAAOU,GAAP,GAAa,GAAxB;AACH;AACD,YAAIC,aAAaJ,WAAWH,IAAX,GAAkBI,GAAnC;AACA,eAAO,KAAKI,OAAL,CAAaD,UAAb,EAAyB,UAACE,YAAD,EAAeC,MAAf,EAA0B;AACtD,gBAAIC,MAAM,IAAV;AACA,gBAAIF,YAAJ,EAAkB;AACdE,sBAAMC,KAAKC,KAAL,CAAWJ,YAAX,CAAN;AACH;AACD,gBAAIP,OAAJ,EAAa;AACTA,wBAAQQ,MAAR,EAAgBC,GAAhB;AACH;AACJ,SARM,CAAP;AASH,KAxBM;;AA0BP;AACA;AACA;AACAH,aAAS,iBAAUF,GAAV,EAAeQ,eAAf,EAAgC;AACrCC,YAAIC,IAAJ,CAAS,uBAAuBV,GAAhC;AACA;AACA,YAAGA,IAAIW,OAAJ,CAAY,OAAZ,KAAwB,CAAC,CAA5B,EAAgC;AAC5BF,gBAAIC,IAAJ,CAAS,mBAAT;AACH;AACD,YAAIE,MAAMC,GAAGC,MAAH,CAAUC,iBAAV,EAAV;;AAEAH,YAAII,kBAAJ,GAAyB,YAAY;AACjC;AACA,gBAAIJ,IAAIK,UAAJ,IAAkB,CAAtB,EAAyB;AACrB,oBAAIL,IAAIR,MAAJ,IAAc,GAAd,IAAqBQ,IAAIR,MAAJ,GAAa,GAAtC,EAA2C;AACvCK,wBAAIC,IAAJ,CAAS,iDAAT,EAA4DV,GAA5D;AACAQ,uCAAmBA,gBAAgBI,IAAIT,YAApB,EAAkC,IAAlC,CAAnB;AACH,iBAHD,MAGO;AACHM,wBAAIS,KAAJ,CAAU,uDAAV,EAAmEN,IAAIR,MAAvE,EAA+EJ,GAA/E;AACAQ,uCAAmBA,gBAAgBI,IAAIT,YAApB,EAAkC,KAAlC,CAAnB;AACH;AAEJ,aATD,MASO;AACHM,oBAAIC,IAAJ,CAAS,4CAAT;AACH;AACJ,SAdD;;AAgBA;AACAE,YAAIO,IAAJ,CAAS,KAAT,EAAgBnB,GAAhB,EAAqB,IAArB;AACA,YAAIa,GAAGO,GAAH,CAAOC,QAAX,EAAqB;AACjBT,gBAAIU,gBAAJ,CAAqB,iBAArB,EAAwC,cAAxC;AACAV,gBAAIU,gBAAJ,CAAqB,cAArB,EAAqC,iCAArC;AACH;;AAED;AACA;AACAV,YAAIW,OAAJ,GAAc,IAAd,CAjCqC,CAiClB;AACnBX,YAAIY,IAAJ;AACH;;AAhEM,CAAX;;AAoEAC,OAAOC,OAAP,GAAiBlC,IAAjB","file":"Http.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\script\\framework\\net","sourcesContent":["const Global = require(\"Global\");\r\n/**\r\n * Http消息类\r\n * 用途：向服务器发送Http请求\r\n */\r\nlet Http = {\r\n\r\n    //发送请求(http请求，只用于用户登录)\r\n    sendRequest: function (path, data, handler, extraUrl) {\r\n        let str = \"?\";\r\n        for (let k in data) {\r\n            if (str != \"?\") {\r\n                str += \"&\";\r\n            }\r\n            str += k + \"=\" + data[k];\r\n        }\r\n        if (extraUrl == null) {\r\n            extraUrl = Global.url + '/';\r\n        }\r\n        let requestURL = extraUrl + path + str;\r\n        return this.sendXHR(requestURL, (responseText, status) => {\r\n            let ret = null;\r\n            if (responseText) {\r\n                ret = JSON.parse(responseText);\r\n            }\r\n            if (handler) {\r\n                handler(status, ret);\r\n            }\r\n        });\r\n    },\r\n\r\n    // 向远程发送一个http请求\r\n    // url - 输入，请求地址\r\n    // responseHandler - 输入，回调上层的函数\r\n    sendXHR: function (url, responseHandler) {\r\n        log.info('Http.sendXHR: url=' + url);\r\n        //test_bug\r\n        if(url.indexOf(\"broke\") != -1 ) {\r\n            log.info(\"gry_final_request\");\r\n        }\r\n        var xhr = cc.loader.getXMLHttpRequest();\r\n\r\n        xhr.onreadystatechange = function () {\r\n            //readyState属性，4 表示准备就绪状态， status属性 200 表示请求成功\r\n            if (xhr.readyState == 4) {\r\n                if (xhr.status >= 200 && xhr.status < 400) {\r\n                    log.info('Http.sendXHR: xhr.readyState is ready, url = {}', url);\r\n                    responseHandler && responseHandler(xhr.responseText, true);\r\n                } else {\r\n                    log.error('Http.sendXHR: xhr.requre failed! code = {}, url = {} ', xhr.status, url);\r\n                    responseHandler && responseHandler(xhr.responseText, false);\r\n                }\r\n\r\n            } else {\r\n                log.info('Http.sendXHR: xhr.readyState is not ready!');\r\n            }\r\n        };\r\n\r\n        //open最多有5个参数(method,url,async(是否异步),user,password)\r\n        xhr.open(\"GET\", url, true);\r\n        if (cc.sys.isNative) {\r\n            xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\r\n            xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\r\n        }\r\n\r\n        // note: In Internet Explorer, the timeout property may be set only after calling the open()\r\n        // method and before calling the send() method.\r\n        xhr.timeout = 3000;// 5 seconds for timeout\r\n        xhr.send();\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Http;\r\n"]}